QUESTION
	Scenario:
		You are developing an employee management system for a company. Efficiently managing employee records is crucial.
		Steps:

		1.	Understand Array Representation:
			a.	Explain how arrays are represented in memory and their advantages.

		4.	Analysis:
			a.	Analyze the time complexity of each operation (add, search, traverse, delete).
			b.	Discuss the limitations of arrays and when to use them.




SOLUTION

    1.
        a. How Arrays Are Represented in Memory and Their Advantages

			Memory Representation:
				- Arrays are stored as contiguous blocks of memory.
				- Each element is placed next to the other in sequential memory locations.
				- Because the elements are stored contiguously, the address of any element can be computed using:
				- Address of element = Base Address + i x Size of each element
				- This allows constant-time access (O(1)) to any element using its index.

			Advantages of Arrays:
				- Fast access: Direct access to any element via index.
				- Simple structure: Easy to understand and implement.
				- Memory efficiency: No extra memory overhead (apart from the array itself).
				- Cache-friendly: Contiguous memory improves cache performance.


	4.
        a. Time Complexity of Operations on Arrays

			Add			O(1) | O(n)
			Search		O(n) | O(1)
			Traverse	O(n)
			Delete	 	O(n)


    4.
        b. Limitations of Arrays and When to Use Them

			Limitations:
				- Fixed size: Array size must be defined at creation and cannot grow or shrink dynamically.
				- Costly insertions/deletions: Especially in the middle, require shifting elements.
				- Inefficient for unknown or changing size data.

			When to Use Arrays:
				- When you know the number of elements in advance.
				- When fast random access is needed.
				- When data is static or infrequently changed.
				- When memory locality and cache performance are important.