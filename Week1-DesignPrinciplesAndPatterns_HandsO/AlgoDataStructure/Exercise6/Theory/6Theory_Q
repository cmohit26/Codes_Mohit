QUESTION
	Scenario:
		You are developing a library management system where users can search for books by title or author.
		Steps:

		1.	Understand Search Algorithms:
		a-	Explain linear search and binary search algorithms.

		4.	Analysis:
		a-	Compare the time complexity of linear and binary search.
		b-	Discuss when to use each algorithm based on the data set size and order.






SOLUTION

    1.
        a.Explain linear and Binary Search
		Linear Search
			Checks each element one by one.
			Works on unsorted or sorted data.
			Time Complexity: O(n)
			Simple, but slower for large data.

		Binary Search
			Repeatedly divides the list in half.
			Works only on sorted data.
			Time Complexity: O(log n)
			Faster, but needs sorted data.


	4.
        a. Time Complexity Comparison

			Linear Search	BEST: O(1)	AVERAGE: O(n/2) ≈ O(n)	WORST: O(n)
			Binary Search	BEST: O(1)	AVERAGE: O(log n)		WORST: O(log n)

    4.
        b. Which is Better for an E-commerce Platform?
			Binary Search is generally more suitable, but only if the data is sorted (or indexed). Here's why:
				Speed: Binary search is much faster (O(log n)) for large datasets — perfect for large product catalogs.
				Scalability: As the number of products grows, log(n) scales much better than O(n).
				User Experience: Faster search = better UX, lower bounce rates.

			When Linear Search is useful:
				For small datasets or ad hoc filters.
				When data is not sorted and performance is less critical.